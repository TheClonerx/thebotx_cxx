#pragma once

#include <array>
#include <span>
#include <string>
#include <string_view>

namespace tcx::impl {
constexpr static std::array<std::string_view, 256> const repr_table = {
    std::string_view { "\\x00" },
    std::string_view { "\\x01" },
    std::string_view { "\\x02" },
    std::string_view { "\\x03" },
    std::string_view { "\\x04" },
    std::string_view { "\\x05" },
    std::string_view { "\\x06" },
    std::string_view { "\\x07" },
    std::string_view { "\\x08" },
    std::string_view { "\\t" },
    std::string_view { "\\n" },
    std::string_view { "\\x0b" },
    std::string_view { "\\x0c" },
    std::string_view { "\\r" },
    std::string_view { "\\x0e" },
    std::string_view { "\\x0f" },
    std::string_view { "\\x10" },
    std::string_view { "\\x11" },
    std::string_view { "\\x12" },
    std::string_view { "\\x13" },
    std::string_view { "\\x14" },
    std::string_view { "\\x15" },
    std::string_view { "\\x16" },
    std::string_view { "\\x17" },
    std::string_view { "\\x18" },
    std::string_view { "\\x19" },
    std::string_view { "\\x1a" },
    std::string_view { "\\x1b" },
    std::string_view { "\\x1c" },
    std::string_view { "\\x1d" },
    std::string_view { "\\x1e" },
    std::string_view { "\\x1f" },
    std::string_view { " " },
    std::string_view { "!" },
    std::string_view { "\\\"" },
    std::string_view { "#" },
    std::string_view { "$" },
    std::string_view { "%" },
    std::string_view { "&" },
    std::string_view { "'" },
    std::string_view { "(" },
    std::string_view { ")" },
    std::string_view { "*" },
    std::string_view { "+" },
    std::string_view { "," },
    std::string_view { "-" },
    std::string_view { "." },
    std::string_view { "/" },
    std::string_view { "0" },
    std::string_view { "1" },
    std::string_view { "2" },
    std::string_view { "3" },
    std::string_view { "4" },
    std::string_view { "5" },
    std::string_view { "6" },
    std::string_view { "7" },
    std::string_view { "8" },
    std::string_view { "9" },
    std::string_view { ":" },
    std::string_view { ";" },
    std::string_view { "<" },
    std::string_view { "=" },
    std::string_view { ">" },
    std::string_view { "?" },
    std::string_view { "@" },
    std::string_view { "A" },
    std::string_view { "B" },
    std::string_view { "C" },
    std::string_view { "D" },
    std::string_view { "E" },
    std::string_view { "F" },
    std::string_view { "G" },
    std::string_view { "H" },
    std::string_view { "I" },
    std::string_view { "J" },
    std::string_view { "K" },
    std::string_view { "L" },
    std::string_view { "M" },
    std::string_view { "N" },
    std::string_view { "O" },
    std::string_view { "P" },
    std::string_view { "Q" },
    std::string_view { "R" },
    std::string_view { "S" },
    std::string_view { "T" },
    std::string_view { "U" },
    std::string_view { "V" },
    std::string_view { "W" },
    std::string_view { "X" },
    std::string_view { "Y" },
    std::string_view { "Z" },
    std::string_view { "[" },
    std::string_view { "\\" },
    std::string_view { "]" },
    std::string_view { "^" },
    std::string_view { "_" },
    std::string_view { "`" },
    std::string_view { "a" },
    std::string_view { "b" },
    std::string_view { "c" },
    std::string_view { "d" },
    std::string_view { "e" },
    std::string_view { "f" },
    std::string_view { "g" },
    std::string_view { "h" },
    std::string_view { "i" },
    std::string_view { "j" },
    std::string_view { "k" },
    std::string_view { "l" },
    std::string_view { "m" },
    std::string_view { "n" },
    std::string_view { "o" },
    std::string_view { "p" },
    std::string_view { "q" },
    std::string_view { "r" },
    std::string_view { "s" },
    std::string_view { "t" },
    std::string_view { "u" },
    std::string_view { "v" },
    std::string_view { "w" },
    std::string_view { "x" },
    std::string_view { "y" },
    std::string_view { "z" },
    std::string_view { "{" },
    std::string_view { "|" },
    std::string_view { "}" },
    std::string_view { "~" },
    std::string_view { "\\x7f" },
    std::string_view { "\\x80" },
    std::string_view { "\\x81" },
    std::string_view { "\\x82" },
    std::string_view { "\\x83" },
    std::string_view { "\\x84" },
    std::string_view { "\\x85" },
    std::string_view { "\\x86" },
    std::string_view { "\\x87" },
    std::string_view { "\\x88" },
    std::string_view { "\\x89" },
    std::string_view { "\\x8a" },
    std::string_view { "\\x8b" },
    std::string_view { "\\x8c" },
    std::string_view { "\\x8d" },
    std::string_view { "\\x8e" },
    std::string_view { "\\x8f" },
    std::string_view { "\\x90" },
    std::string_view { "\\x91" },
    std::string_view { "\\x92" },
    std::string_view { "\\x93" },
    std::string_view { "\\x94" },
    std::string_view { "\\x95" },
    std::string_view { "\\x96" },
    std::string_view { "\\x97" },
    std::string_view { "\\x98" },
    std::string_view { "\\x99" },
    std::string_view { "\\x9a" },
    std::string_view { "\\x9b" },
    std::string_view { "\\x9c" },
    std::string_view { "\\x9d" },
    std::string_view { "\\x9e" },
    std::string_view { "\\x9f" },
    std::string_view { "\\xa0" },
    std::string_view { "\\xa1" },
    std::string_view { "\\xa2" },
    std::string_view { "\\xa3" },
    std::string_view { "\\xa4" },
    std::string_view { "\\xa5" },
    std::string_view { "\\xa6" },
    std::string_view { "\\xa7" },
    std::string_view { "\\xa8" },
    std::string_view { "\\xa9" },
    std::string_view { "\\xaa" },
    std::string_view { "\\xab" },
    std::string_view { "\\xac" },
    std::string_view { "\\xad" },
    std::string_view { "\\xae" },
    std::string_view { "\\xaf" },
    std::string_view { "\\xb0" },
    std::string_view { "\\xb1" },
    std::string_view { "\\xb2" },
    std::string_view { "\\xb3" },
    std::string_view { "\\xb4" },
    std::string_view { "\\xb5" },
    std::string_view { "\\xb6" },
    std::string_view { "\\xb7" },
    std::string_view { "\\xb8" },
    std::string_view { "\\xb9" },
    std::string_view { "\\xba" },
    std::string_view { "\\xbb" },
    std::string_view { "\\xbc" },
    std::string_view { "\\xbd" },
    std::string_view { "\\xbe" },
    std::string_view { "\\xbf" },
    std::string_view { "\\xc0" },
    std::string_view { "\\xc1" },
    std::string_view { "\\xc2" },
    std::string_view { "\\xc3" },
    std::string_view { "\\xc4" },
    std::string_view { "\\xc5" },
    std::string_view { "\\xc6" },
    std::string_view { "\\xc7" },
    std::string_view { "\\xc8" },
    std::string_view { "\\xc9" },
    std::string_view { "\\xca" },
    std::string_view { "\\xcb" },
    std::string_view { "\\xcc" },
    std::string_view { "\\xcd" },
    std::string_view { "\\xce" },
    std::string_view { "\\xcf" },
    std::string_view { "\\xd0" },
    std::string_view { "\\xd1" },
    std::string_view { "\\xd2" },
    std::string_view { "\\xd3" },
    std::string_view { "\\xd4" },
    std::string_view { "\\xd5" },
    std::string_view { "\\xd6" },
    std::string_view { "\\xd7" },
    std::string_view { "\\xd8" },
    std::string_view { "\\xd9" },
    std::string_view { "\\xda" },
    std::string_view { "\\xdb" },
    std::string_view { "\\xdc" },
    std::string_view { "\\xdd" },
    std::string_view { "\\xde" },
    std::string_view { "\\xdf" },
    std::string_view { "\\xe0" },
    std::string_view { "\\xe1" },
    std::string_view { "\\xe2" },
    std::string_view { "\\xe3" },
    std::string_view { "\\xe4" },
    std::string_view { "\\xe5" },
    std::string_view { "\\xe6" },
    std::string_view { "\\xe7" },
    std::string_view { "\\xe8" },
    std::string_view { "\\xe9" },
    std::string_view { "\\xea" },
    std::string_view { "\\xeb" },
    std::string_view { "\\xec" },
    std::string_view { "\\xed" },
    std::string_view { "\\xee" },
    std::string_view { "\\xef" },
    std::string_view { "\\xf0" },
    std::string_view { "\\xf1" },
    std::string_view { "\\xf2" },
    std::string_view { "\\xf3" },
    std::string_view { "\\xf4" },
    std::string_view { "\\xf5" },
    std::string_view { "\\xf6" },
    std::string_view { "\\xf7" },
    std::string_view { "\\xf8" },
    std::string_view { "\\xf9" },
    std::string_view { "\\xfa" },
    std::string_view { "\\xfb" },
    std::string_view { "\\xfc" },
    std::string_view { "\\xfd" },
    std::string_view { "\\xfe" },
    std::string_view { "\\xff" }
};
} // namespace tcx::impl

namespace tcx {

template <std::size_t E>
std::string repr(std::span<const std::byte, E> bytes)
{
    std::string result;
    result += "\"";
    for (std::byte b : bytes) {
        result += tcx::impl::repr_table[static_cast<unsigned char>(b)];
    }
    result += "\"";
    return result;
}

inline std::string repr(std::string_view s)
{
    return repr(std::as_bytes(std::span { s.data(), s.size() }));
}

} // namespace tcx
